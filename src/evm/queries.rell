struct contract_info {
  chain: name;
  contract: byte_array;
  block_number: integer;
  collection: name;
  type: name;
}

query get_contracts_info(type: name?): list<contract_info> {
  return (c: contract_metadata) @* {
    if (type == null) true else .type == type
  } (
    contract_info (
      chain = c.contract.chain.name,
      contract = c.contract.id,
      block_number = c.contract.block_number,
      collection = c.collection,
      type = c.type
    )
  );
}

query get_block_number(chain: name, contract: byte_array) {
  return (c: contract) @? { .chain.name == chain, .id == contract } ( .block_number );
}

query get_processed_events(contract: byte_array) {
  return (e: processed_event) @* { .contract.id == contract } ( .event_id );
}

query is_event_processed(contract: byte_array, event_id: text) {
  return (e: processed_event) @? { .contract.id == contract, .event_id == event_id } != null;
}
