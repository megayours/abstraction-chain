operation create_collection(owner: text, id: byte_array, name: text) {
  consensus.validate();

  create collection(id, owner = format_account(owner), name);
}

operation create_item(collection: byte_array, token_id: text, properties: json) {
  consensus.validate();

  val id = megadata.generate_id(collection, token_id);
  val _collection = require((c: collection) @? { c.id == collection }, "Collection not found: %s".format(collection));
  val _properties = map<text, map<text, gtv>>.from_gtv(gtv.from_json(properties));
  val token = yours.create_token(
    id,
    token_type = yours.token_type.external,
    properties = _properties,
    decimals = 0
  );

  megadata.attach(token, collection);

  create item(token, _collection);
}
